circuit Controller :
  module Controller :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip op : UInt<5>, flip f3 : UInt<3>, flip rd : UInt<5>, flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip f7 : UInt<1>, flip alu_out : UInt<1>, stall : UInt<1>, next_pc_sel : UInt<1>, F_im_w_en : UInt<4>, D_rs1_data_sel : UInt<1>, D_rs2_data_sel : UInt<1>, E_rs1_data_sel : UInt<2>, E_rs2_data_sel : UInt<2>, E_jb_op1_sel : UInt<1>, E_alu_op1_sel : UInt<1>, E_alu_op2_sel : UInt<1>, E_op : UInt<5>, E_f3 : UInt<3>, E_f7 : UInt<1>, M_dm_w_en : UInt<4>, W_wb_en : UInt<1>, W_rd_index : UInt<5>, W_f3 : UInt<3>, W_wb_data_sel : UInt<1>}

    reg IN_E_OP_REG : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Controller.scala 54:38]
    reg IN_E_F3_REG : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Controller.scala 55:38]
    reg IN_E_RD_REG : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Controller.scala 56:38]
    reg IN_E_RS1_REG : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Controller.scala 57:38]
    reg IN_E_RS2_REG : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Controller.scala 58:38]
    reg IN_E_F7_REG : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Controller.scala 59:38]
    reg IN_M_OP_REG : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Controller.scala 61:38]
    reg IN_M_F3_REG : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Controller.scala 62:38]
    reg IN_M_RD_REG : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Controller.scala 63:38]
    reg IN_W_OP_REG : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Controller.scala 65:38]
    reg IN_W_F3_REG : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[Controller.scala 66:38]
    reg IN_W_RD_REG : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[Controller.scala 67:38]
    node _T = or(io.stall, io.next_pc_sel) @[Controller.scala 69:19]
    when _T : @[Controller.scala 69:37]
      IN_E_OP_REG <= UInt<5>("hc") @[Controller.scala 71:25]
      IN_E_F3_REG <= UInt<3>("h0") @[Controller.scala 72:25]
      IN_E_RD_REG <= UInt<5>("h0") @[Controller.scala 73:25]
      IN_E_RS1_REG <= UInt<5>("h0") @[Controller.scala 74:25]
      IN_E_RS2_REG <= UInt<5>("h0") @[Controller.scala 75:25]
      IN_E_F7_REG <= UInt<1>("h0") @[Controller.scala 76:25]
      IN_M_OP_REG <= IN_E_OP_REG @[Controller.scala 79:25]
      IN_M_F3_REG <= IN_E_F3_REG @[Controller.scala 80:25]
      IN_M_RD_REG <= IN_E_RD_REG @[Controller.scala 81:25]
      IN_W_OP_REG <= IN_M_OP_REG @[Controller.scala 84:25]
      IN_W_F3_REG <= IN_M_F3_REG @[Controller.scala 85:25]
      IN_W_RD_REG <= IN_M_RD_REG @[Controller.scala 86:25]
    else :
      IN_E_OP_REG <= io.op @[Controller.scala 89:25]
      IN_E_F3_REG <= io.f3 @[Controller.scala 90:25]
      IN_E_RD_REG <= io.rd @[Controller.scala 91:25]
      IN_E_RS1_REG <= io.rs1 @[Controller.scala 92:25]
      IN_E_RS2_REG <= io.rs2 @[Controller.scala 93:25]
      IN_E_F7_REG <= io.f7 @[Controller.scala 94:25]
      IN_M_OP_REG <= IN_E_OP_REG @[Controller.scala 97:25]
      IN_M_F3_REG <= IN_E_F3_REG @[Controller.scala 98:25]
      IN_M_RD_REG <= IN_E_RD_REG @[Controller.scala 99:25]
      IN_W_OP_REG <= IN_M_OP_REG @[Controller.scala 102:25]
      IN_W_F3_REG <= IN_M_F3_REG @[Controller.scala 103:25]
      IN_W_RD_REG <= IN_M_RD_REG @[Controller.scala 104:25]
    wire is_D_use_rs1 : UInt<1> @[Controller.scala 109:28]
    wire is_D_use_rs2 : UInt<1> @[Controller.scala 110:28]
    wire is_W_use_rd : UInt<1> @[Controller.scala 111:27]
    wire is_D_rs1_W_rd_overlap : UInt<1> @[Controller.scala 112:37]
    wire is_D_rs2_W_rd_overlap : UInt<1> @[Controller.scala 113:37]
    wire is_E_use_rs1 : UInt<1> @[Controller.scala 115:28]
    wire is_E_use_rs2 : UInt<1> @[Controller.scala 116:28]
    wire is_M_use_rd : UInt<1> @[Controller.scala 117:27]
    wire is_E_rs1_W_rd_overlap : UInt<1> @[Controller.scala 118:37]
    wire is_E_rs1_M_rd_overlap : UInt<1> @[Controller.scala 119:37]
    wire is_E_rs2_W_rd_overlap : UInt<1> @[Controller.scala 120:37]
    wire is_E_rs2_M_rd_overlap : UInt<1> @[Controller.scala 121:37]
    wire is_DE_overlap : UInt<1> @[Controller.scala 123:29]
    wire is_D_rs1_E_rd_overlap : UInt<1> @[Controller.scala 124:37]
    wire is_D_rs2_E_rd_overlap : UInt<1> @[Controller.scala 125:37]
    node _T_1 = eq(io.op, UInt<5>("hd")) @[Controller.scala 129:15]
    node _T_2 = eq(io.op, UInt<5>("h5")) @[Controller.scala 130:15]
    node _T_3 = or(_T_1, _T_2) @[Controller.scala 129:48]
    node _T_4 = eq(io.op, UInt<5>("h1b")) @[Controller.scala 131:15]
    node _T_5 = or(_T_3, _T_4) @[Controller.scala 130:50]
    when _T_5 : @[Controller.scala 132:6]
      is_D_use_rs1 <= UInt<1>("h0") @[Controller.scala 133:22]
    else :
      is_D_use_rs1 <= UInt<1>("h1") @[Controller.scala 135:22]
    node _T_6 = eq(io.op, UInt<5>("hc")) @[Controller.scala 140:15]
    node _T_7 = eq(io.op, UInt<5>("h8")) @[Controller.scala 141:15]
    node _T_8 = or(_T_6, _T_7) @[Controller.scala 140:46]
    node _T_9 = eq(io.op, UInt<5>("h18")) @[Controller.scala 142:15]
    node _T_10 = or(_T_8, _T_9) @[Controller.scala 141:46]
    when _T_10 : @[Controller.scala 143:6]
      is_D_use_rs2 <= UInt<1>("h1") @[Controller.scala 144:22]
    else :
      is_D_use_rs2 <= UInt<1>("h0") @[Controller.scala 146:22]
    node _T_11 = eq(IN_E_OP_REG, UInt<5>("hd")) @[Controller.scala 151:21]
    node _T_12 = eq(IN_E_OP_REG, UInt<5>("h5")) @[Controller.scala 152:21]
    node _T_13 = or(_T_11, _T_12) @[Controller.scala 151:54]
    node _T_14 = eq(IN_E_OP_REG, UInt<5>("h1b")) @[Controller.scala 153:21]
    node _T_15 = or(_T_13, _T_14) @[Controller.scala 152:56]
    when _T_15 : @[Controller.scala 154:6]
      is_E_use_rs1 <= UInt<1>("h0") @[Controller.scala 155:22]
    else :
      is_E_use_rs1 <= UInt<1>("h1") @[Controller.scala 157:22]
    node _T_16 = eq(IN_E_OP_REG, UInt<5>("hc")) @[Controller.scala 162:21]
    node _T_17 = eq(IN_E_OP_REG, UInt<5>("h8")) @[Controller.scala 163:21]
    node _T_18 = or(_T_16, _T_17) @[Controller.scala 162:52]
    node _T_19 = eq(IN_E_OP_REG, UInt<5>("h18")) @[Controller.scala 164:21]
    node _T_20 = or(_T_18, _T_19) @[Controller.scala 163:52]
    when _T_20 : @[Controller.scala 165:6]
      is_E_use_rs2 <= UInt<1>("h1") @[Controller.scala 166:22]
    else :
      is_E_use_rs2 <= UInt<1>("h0") @[Controller.scala 168:22]
    node _T_21 = eq(IN_M_OP_REG, UInt<5>("h18")) @[Controller.scala 173:21]
    node _T_22 = eq(IN_M_OP_REG, UInt<5>("h8")) @[Controller.scala 174:21]
    node _T_23 = or(_T_21, _T_22) @[Controller.scala 173:52]
    when _T_23 : @[Controller.scala 175:7]
      is_M_use_rd <= UInt<1>("h0") @[Controller.scala 176:21]
    else :
      is_M_use_rd <= UInt<1>("h1") @[Controller.scala 178:21]
    node _T_24 = eq(IN_W_OP_REG, UInt<5>("h18")) @[Controller.scala 183:21]
    node _T_25 = eq(IN_W_OP_REG, UInt<5>("h8")) @[Controller.scala 184:21]
    node _T_26 = or(_T_24, _T_25) @[Controller.scala 183:52]
    when _T_26 : @[Controller.scala 185:7]
      is_W_use_rd <= UInt<1>("h0") @[Controller.scala 186:21]
    else :
      is_W_use_rd <= UInt<1>("h1") @[Controller.scala 188:21]
    node _is_D_rs1_W_rd_overlap_T = and(is_D_use_rs1, is_W_use_rd) @[Controller.scala 192:43]
    node _is_D_rs1_W_rd_overlap_T_1 = eq(io.rs1, IN_W_RD_REG) @[Controller.scala 192:69]
    node _is_D_rs1_W_rd_overlap_T_2 = and(_is_D_rs1_W_rd_overlap_T, _is_D_rs1_W_rd_overlap_T_1) @[Controller.scala 192:58]
    node _is_D_rs1_W_rd_overlap_T_3 = neq(IN_W_RD_REG, UInt<1>("h0")) @[Controller.scala 192:102]
    node _is_D_rs1_W_rd_overlap_T_4 = and(_is_D_rs1_W_rd_overlap_T_2, _is_D_rs1_W_rd_overlap_T_3) @[Controller.scala 192:86]
    is_D_rs1_W_rd_overlap <= _is_D_rs1_W_rd_overlap_T_4 @[Controller.scala 192:27]
    node _is_D_rs2_W_rd_overlap_T = and(is_D_use_rs2, is_W_use_rd) @[Controller.scala 193:43]
    node _is_D_rs2_W_rd_overlap_T_1 = eq(io.rs2, IN_W_RD_REG) @[Controller.scala 193:69]
    node _is_D_rs2_W_rd_overlap_T_2 = and(_is_D_rs2_W_rd_overlap_T, _is_D_rs2_W_rd_overlap_T_1) @[Controller.scala 193:58]
    node _is_D_rs2_W_rd_overlap_T_3 = neq(IN_W_RD_REG, UInt<1>("h0")) @[Controller.scala 193:102]
    node _is_D_rs2_W_rd_overlap_T_4 = and(_is_D_rs2_W_rd_overlap_T_2, _is_D_rs2_W_rd_overlap_T_3) @[Controller.scala 193:86]
    is_D_rs2_W_rd_overlap <= _is_D_rs2_W_rd_overlap_T_4 @[Controller.scala 193:27]
    node _io_D_rs1_data_sel_T = mux(is_D_rs1_W_rd_overlap, UInt<1>("h1"), UInt<1>("h0")) @[Controller.scala 194:29]
    io.D_rs1_data_sel <= _io_D_rs1_data_sel_T @[Controller.scala 194:23]
    node _io_D_rs2_data_sel_T = mux(is_D_rs2_W_rd_overlap, UInt<1>("h1"), UInt<1>("h0")) @[Controller.scala 195:29]
    io.D_rs2_data_sel <= _io_D_rs2_data_sel_T @[Controller.scala 195:23]
    node _is_E_rs1_W_rd_overlap_T = and(is_E_use_rs1, is_W_use_rd) @[Controller.scala 198:43]
    node _is_E_rs1_W_rd_overlap_T_1 = eq(IN_E_RS1_REG, IN_W_RD_REG) @[Controller.scala 198:75]
    node _is_E_rs1_W_rd_overlap_T_2 = and(_is_E_rs1_W_rd_overlap_T, _is_E_rs1_W_rd_overlap_T_1) @[Controller.scala 198:58]
    node _is_E_rs1_W_rd_overlap_T_3 = neq(IN_W_RD_REG, UInt<1>("h0")) @[Controller.scala 198:108]
    node _is_E_rs1_W_rd_overlap_T_4 = and(_is_E_rs1_W_rd_overlap_T_2, _is_E_rs1_W_rd_overlap_T_3) @[Controller.scala 198:92]
    is_E_rs1_W_rd_overlap <= _is_E_rs1_W_rd_overlap_T_4 @[Controller.scala 198:27]
    node _is_E_rs1_M_rd_overlap_T = and(is_E_use_rs1, is_M_use_rd) @[Controller.scala 199:43]
    node _is_E_rs1_M_rd_overlap_T_1 = eq(IN_E_RS1_REG, IN_M_RD_REG) @[Controller.scala 199:75]
    node _is_E_rs1_M_rd_overlap_T_2 = and(_is_E_rs1_M_rd_overlap_T, _is_E_rs1_M_rd_overlap_T_1) @[Controller.scala 199:58]
    node _is_E_rs1_M_rd_overlap_T_3 = neq(IN_M_RD_REG, UInt<1>("h0")) @[Controller.scala 199:108]
    node _is_E_rs1_M_rd_overlap_T_4 = and(_is_E_rs1_M_rd_overlap_T_2, _is_E_rs1_M_rd_overlap_T_3) @[Controller.scala 199:92]
    is_E_rs1_M_rd_overlap <= _is_E_rs1_M_rd_overlap_T_4 @[Controller.scala 199:27]
    node _io_E_rs1_data_sel_T = mux(is_E_rs1_W_rd_overlap, UInt<2>("h0"), UInt<2>("h2")) @[Controller.scala 200:67]
    node _io_E_rs1_data_sel_T_1 = mux(is_E_rs1_M_rd_overlap, UInt<2>("h1"), _io_E_rs1_data_sel_T) @[Controller.scala 200:30]
    io.E_rs1_data_sel <= _io_E_rs1_data_sel_T_1 @[Controller.scala 200:24]
    node _is_E_rs2_W_rd_overlap_T = and(is_E_use_rs2, is_W_use_rd) @[Controller.scala 201:43]
    node _is_E_rs2_W_rd_overlap_T_1 = eq(IN_E_RS2_REG, IN_W_RD_REG) @[Controller.scala 201:75]
    node _is_E_rs2_W_rd_overlap_T_2 = and(_is_E_rs2_W_rd_overlap_T, _is_E_rs2_W_rd_overlap_T_1) @[Controller.scala 201:58]
    node _is_E_rs2_W_rd_overlap_T_3 = neq(IN_W_RD_REG, UInt<1>("h0")) @[Controller.scala 201:108]
    node _is_E_rs2_W_rd_overlap_T_4 = and(_is_E_rs2_W_rd_overlap_T_2, _is_E_rs2_W_rd_overlap_T_3) @[Controller.scala 201:92]
    is_E_rs2_W_rd_overlap <= _is_E_rs2_W_rd_overlap_T_4 @[Controller.scala 201:27]
    node _is_E_rs2_M_rd_overlap_T = and(is_E_use_rs2, is_M_use_rd) @[Controller.scala 202:43]
    node _is_E_rs2_M_rd_overlap_T_1 = eq(IN_E_RS2_REG, IN_M_RD_REG) @[Controller.scala 202:75]
    node _is_E_rs2_M_rd_overlap_T_2 = and(_is_E_rs2_M_rd_overlap_T, _is_E_rs2_M_rd_overlap_T_1) @[Controller.scala 202:58]
    node _is_E_rs2_M_rd_overlap_T_3 = neq(IN_M_RD_REG, UInt<1>("h0")) @[Controller.scala 202:108]
    node _is_E_rs2_M_rd_overlap_T_4 = and(_is_E_rs2_M_rd_overlap_T_2, _is_E_rs2_M_rd_overlap_T_3) @[Controller.scala 202:92]
    is_E_rs2_M_rd_overlap <= _is_E_rs2_M_rd_overlap_T_4 @[Controller.scala 202:27]
    node _io_E_rs2_data_sel_T = mux(is_E_rs2_W_rd_overlap, UInt<2>("h0"), UInt<2>("h2")) @[Controller.scala 203:67]
    node _io_E_rs2_data_sel_T_1 = mux(is_E_rs2_M_rd_overlap, UInt<2>("h1"), _io_E_rs2_data_sel_T) @[Controller.scala 203:30]
    io.E_rs2_data_sel <= _io_E_rs2_data_sel_T_1 @[Controller.scala 203:24]
    node _is_D_rs1_E_rd_overlap_T = eq(io.rs1, IN_E_RD_REG) @[Controller.scala 206:54]
    node _is_D_rs1_E_rd_overlap_T_1 = and(is_D_use_rs1, _is_D_rs1_E_rd_overlap_T) @[Controller.scala 206:43]
    node _is_D_rs1_E_rd_overlap_T_2 = neq(IN_E_RD_REG, UInt<1>("h0")) @[Controller.scala 206:87]
    node _is_D_rs1_E_rd_overlap_T_3 = and(_is_D_rs1_E_rd_overlap_T_1, _is_D_rs1_E_rd_overlap_T_2) @[Controller.scala 206:71]
    is_D_rs1_E_rd_overlap <= _is_D_rs1_E_rd_overlap_T_3 @[Controller.scala 206:27]
    node _is_D_rs2_E_rd_overlap_T = eq(io.rs2, IN_E_RD_REG) @[Controller.scala 207:54]
    node _is_D_rs2_E_rd_overlap_T_1 = and(is_D_use_rs2, _is_D_rs2_E_rd_overlap_T) @[Controller.scala 207:43]
    node _is_D_rs2_E_rd_overlap_T_2 = neq(IN_E_RD_REG, UInt<1>("h0")) @[Controller.scala 207:87]
    node _is_D_rs2_E_rd_overlap_T_3 = and(_is_D_rs2_E_rd_overlap_T_1, _is_D_rs2_E_rd_overlap_T_2) @[Controller.scala 207:71]
    is_D_rs2_E_rd_overlap <= _is_D_rs2_E_rd_overlap_T_3 @[Controller.scala 207:27]
    node _is_DE_overlap_T = or(is_D_rs1_E_rd_overlap, is_D_rs2_E_rd_overlap) @[Controller.scala 208:45]
    is_DE_overlap <= _is_DE_overlap_T @[Controller.scala 208:19]
    node _io_stall_T = eq(IN_E_OP_REG, UInt<5>("h0")) @[Controller.scala 209:30]
    node _io_stall_T_1 = and(_io_stall_T, is_DE_overlap) @[Controller.scala 209:63]
    io.stall <= _io_stall_T_1 @[Controller.scala 209:14]
    io.E_op <= IN_E_OP_REG @[Controller.scala 215:13]
    io.E_f3 <= IN_E_F3_REG @[Controller.scala 216:13]
    io.E_f7 <= IN_E_F7_REG @[Controller.scala 217:13]
    io.next_pc_sel <= UInt<1>("h0") @[Controller.scala 220:25]
    io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 221:25]
    io.E_alu_op1_sel <= UInt<1>("h0") @[Controller.scala 222:25]
    io.E_alu_op2_sel <= UInt<1>("h0") @[Controller.scala 223:25]
    node _T_27 = eq(UInt<5>("h1b"), IN_E_OP_REG) @[Controller.scala 225:24]
    when _T_27 : @[Controller.scala 225:24]
      io.next_pc_sel <= UInt<1>("h1") @[Controller.scala 227:33]
      io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 228:33]
      io.E_alu_op1_sel <= UInt<1>("h0") @[Controller.scala 229:33]
      io.E_alu_op2_sel <= UInt<1>("h0") @[Controller.scala 230:33]
    else :
      node _T_28 = eq(UInt<5>("h19"), IN_E_OP_REG) @[Controller.scala 225:24]
      when _T_28 : @[Controller.scala 225:24]
        io.next_pc_sel <= UInt<1>("h1") @[Controller.scala 233:33]
        io.E_jb_op1_sel <= UInt<1>("h1") @[Controller.scala 234:33]
        io.E_alu_op1_sel <= UInt<1>("h0") @[Controller.scala 235:33]
        io.E_alu_op2_sel <= UInt<1>("h0") @[Controller.scala 236:33]
      else :
        node _T_29 = eq(UInt<5>("h18"), IN_E_OP_REG) @[Controller.scala 225:24]
        when _T_29 : @[Controller.scala 225:24]
          io.next_pc_sel <= io.alu_out @[Controller.scala 239:33]
          io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 240:33]
          io.E_alu_op1_sel <= UInt<1>("h1") @[Controller.scala 241:33]
          io.E_alu_op2_sel <= UInt<1>("h1") @[Controller.scala 242:33]
        else :
          node _T_30 = eq(UInt<5>("hc"), IN_E_OP_REG) @[Controller.scala 225:24]
          when _T_30 : @[Controller.scala 225:24]
            io.next_pc_sel <= UInt<1>("h0") @[Controller.scala 245:33]
            io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 246:33]
            io.E_alu_op1_sel <= UInt<1>("h1") @[Controller.scala 247:33]
            io.E_alu_op2_sel <= UInt<1>("h1") @[Controller.scala 248:33]
          else :
            node _T_31 = eq(UInt<5>("h4"), IN_E_OP_REG) @[Controller.scala 225:24]
            when _T_31 : @[Controller.scala 225:24]
              io.next_pc_sel <= UInt<1>("h0") @[Controller.scala 251:33]
              io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 252:33]
              io.E_alu_op1_sel <= UInt<1>("h1") @[Controller.scala 253:33]
              io.E_alu_op2_sel <= UInt<1>("h0") @[Controller.scala 254:33]
            else :
              node _T_32 = eq(UInt<5>("h0"), IN_E_OP_REG) @[Controller.scala 225:24]
              when _T_32 : @[Controller.scala 225:24]
                io.next_pc_sel <= UInt<1>("h0") @[Controller.scala 257:33]
                io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 258:33]
                io.E_alu_op1_sel <= UInt<1>("h1") @[Controller.scala 259:33]
                io.E_alu_op2_sel <= UInt<1>("h0") @[Controller.scala 260:33]
              else :
                node _T_33 = eq(UInt<5>("h8"), IN_E_OP_REG) @[Controller.scala 225:24]
                when _T_33 : @[Controller.scala 225:24]
                  io.next_pc_sel <= UInt<1>("h0") @[Controller.scala 263:33]
                  io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 264:33]
                  io.E_alu_op1_sel <= UInt<1>("h1") @[Controller.scala 265:33]
                  io.E_alu_op2_sel <= UInt<1>("h0") @[Controller.scala 266:33]
                else :
                  node _T_34 = eq(UInt<5>("h5"), IN_E_OP_REG) @[Controller.scala 225:24]
                  when _T_34 : @[Controller.scala 225:24]
                    io.next_pc_sel <= UInt<1>("h0") @[Controller.scala 269:33]
                    io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 270:33]
                    io.E_alu_op1_sel <= UInt<1>("h0") @[Controller.scala 271:33]
                    io.E_alu_op2_sel <= UInt<1>("h0") @[Controller.scala 272:33]
                  else :
                    node _T_35 = eq(UInt<5>("hd"), IN_E_OP_REG) @[Controller.scala 225:24]
                    when _T_35 : @[Controller.scala 225:24]
                      io.next_pc_sel <= UInt<1>("h0") @[Controller.scala 275:33]
                      io.E_jb_op1_sel <= UInt<1>("h0") @[Controller.scala 276:33]
                      io.E_alu_op1_sel <= UInt<1>("h0") @[Controller.scala 277:33]
                      io.E_alu_op2_sel <= UInt<1>("h0") @[Controller.scala 278:33]
    node _T_36 = eq(IN_M_OP_REG, UInt<5>("h8")) @[Controller.scala 283:22]
    when _T_36 : @[Controller.scala 283:53]
      io.M_dm_w_en <= UInt<4>("h0") @[Controller.scala 284:22]
      node _T_37 = eq(UInt<1>("h0"), IN_M_F3_REG) @[Controller.scala 285:28]
      when _T_37 : @[Controller.scala 285:28]
        io.M_dm_w_en <= UInt<4>("h1") @[Controller.scala 287:30]
      else :
        node _T_38 = eq(UInt<1>("h1"), IN_M_F3_REG) @[Controller.scala 285:28]
        when _T_38 : @[Controller.scala 285:28]
          io.M_dm_w_en <= UInt<4>("h3") @[Controller.scala 290:30]
        else :
          node _T_39 = eq(UInt<2>("h2"), IN_M_F3_REG) @[Controller.scala 285:28]
          when _T_39 : @[Controller.scala 285:28]
            io.M_dm_w_en <= UInt<4>("hf") @[Controller.scala 293:30]
    else :
      io.M_dm_w_en <= UInt<4>("h0") @[Controller.scala 297:22]
    io.W_rd_index <= IN_W_RD_REG @[Controller.scala 301:21]
    io.W_f3 <= IN_W_F3_REG @[Controller.scala 302:21]
    node _T_40 = eq(IN_W_OP_REG, UInt<5>("h18")) @[Controller.scala 305:21]
    node _T_41 = eq(IN_W_OP_REG, UInt<5>("h8")) @[Controller.scala 306:21]
    node _T_42 = or(_T_40, _T_41) @[Controller.scala 305:52]
    when _T_42 : @[Controller.scala 307:6]
      io.W_wb_en <= UInt<1>("h0") @[Controller.scala 308:20]
      io.W_wb_data_sel <= UInt<1>("h0") @[Controller.scala 309:26]
    else :
      io.W_wb_en <= UInt<1>("h1") @[Controller.scala 311:20]
      node _T_43 = eq(IN_W_OP_REG, UInt<5>("h0")) @[Controller.scala 312:26]
      when _T_43 : @[Controller.scala 312:58]
        io.W_wb_data_sel <= UInt<1>("h0") @[Controller.scala 313:30]
      else :
        io.W_wb_data_sel <= UInt<1>("h1") @[Controller.scala 315:30]
    io.F_im_w_en <= UInt<4>("h0") @[Controller.scala 318:18]

