[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 72 products, 21 sources, 4 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/Pipeline/Controller.scala, ${BASE}/src/main/scala/Pipeline/RegFile.scala, ${BASE}/src/main/scala/Pipeline/Top.scala, ${BASE}/src/main/scala/Pipeline/Controller_backup copy.scala, ${BASE}/src/main/scala/Pipeline/Reg_W.scala, ${BASE}/src/main/scala/Pipeline/Reg_M.scala, ${BASE}/src/main/scala/Pipeline/ALU.scala, ${BASE}/src/main/scala/Pipeline/JB_Unit.scala, ${BASE}/src/main/scala/Pipeline/SRAM_dm.scala, ${BASE}/src/main/scala/Pipeline/Reg_PC.scala, ${BASE}/src/main/scala/Pipeline/Imm_Ext.scala, ${BASE}/src/main/scala/Pipeline/Mux3.scala, ${BASE}/src/main/scala/Pipeline/SRAM.scala, ${BASE}/src/main/scala/Pipeline/Definition.scala, ${BASE}/src/main/scala/Pipeline/LD_Filter.scala, ${BASE}/src/main/scala/Pipeline/Reg_E.scala, ${BASE}/src/main/scala/Pipeline/Reg_D.scala, ${BASE}/src/main/scala/Pipeline/BPU.scala, ${BASE}/src/main/scala/Pipeline/Decoder.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/src/main/scala/hello/Hello.scala, ${BASE}/src/main/scala/FIR/FIR.scala), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/main/scala/hello/Hello.scala, ${BASE}/src/main/scala/FIR/FIR.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Hello, FIR)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(Hello, FIR)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hello, FIR[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Hello...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hello[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Hello)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Hello,ModifiedNames(changes = UsedName(parentPathName,[Default]), UsedName(forceName,[Default]), UsedName(circuitName,[Default]), UsedName(seedOpt,[Default]), UsedName(isClosed,[Default]), UsedName(parentModName,[Default]), UsedName(initializeInParent,[Default]), UsedName(override_clock_=,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(findPort,[Default]), UsedName(blkReg,[Default]), UsedName(_namespace,[Default]), UsedName(override_reset_=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getPublicFields,[Default]), UsedName(addId,[Default]), UsedName(generateComponent,[Default]), UsedName(nameIds,[Default]), UsedName(CNT_MAX,[Default]), UsedName(name,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(portsContains,[Default]), UsedName(equals,[Default]), UsedName(args,[Default]), UsedName(Hello,[Default]), UsedName(cntReg,[Default]), UsedName(IO,[Default]), UsedName(_parent,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(toNamed,[Default]), UsedName(ne,[Default]), UsedName(eq,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(getTarget,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(delayedInit,[Default]), UsedName(isInstanceOf,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(reifyTarget,[Default]), UsedName(addCommand,[Default]), UsedName(override_reset,[Default]), UsedName(finalize,[Default]), UsedName(Hello;init;,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(io,[Default]), UsedName(namePorts,[Default]), UsedName(mkReset,[Default]), UsedName(_computeName,[Default]), UsedName(desiredName,[Default]), UsedName(toTarget,[Default]), UsedName(reset,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getChiselPorts,[Default]), UsedName(pathName,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(_onModuleClose,[Default]), UsedName(clock,[Default]), UsedName(setRef,[Default]), UsedName(led,[Default]), UsedName($init$,[Default]), UsedName(suggestName,[Default]), UsedName(getCommands,[Default]), UsedName(getPorts,[Default]), UsedName(getClass,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(_id,[Default]), UsedName(_component,[Default]), UsedName(override_clock,[Default]), UsedName(_closed,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(reifyParent,[Default]), UsedName(_lastId,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(synchronized,[Default]), UsedName(_circuit,[Default]), UsedName(instanceName,[Default]), UsedName(getModulePorts,[Default]), UsedName(getRef,[Default]), UsedName(compileOptions,[Default]), UsedName(main,[Default]), UsedName(executionStart,[Default]), UsedName(forceFinalName,[Default]))) invalidates 1 classes due to The Hello has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(parentPathName,[Default]), UsedName(forceName,[Default]), UsedName(circuitName,[Default]), UsedName(seedOpt,[Default]), UsedName(isClosed,[Default]), UsedName(parentModName,[Default]), UsedName(initializeInParent,[Default]), UsedName(override_clock_=,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(findPort,[Default]), UsedName(blkReg,[Default]), UsedName(_namespace,[Default]), UsedName(override_reset_=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getPublicFields,[Default]), UsedName(addId,[Default]), UsedName(generateComponent,[Default]), UsedName(nameIds,[Default]), UsedName(CNT_MAX,[Default]), UsedName(name,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(portsContains,[Default]), UsedName(equals,[Default]), UsedName(args,[Default]), UsedName(Hello,[Default]), UsedName(cntReg,[Default]), UsedName(IO,[Default]), UsedName(_parent,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(toNamed,[Default]), UsedName(ne,[Default]), UsedName(eq,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(getTarget,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(delayedInit,[Default]), UsedName(isInstanceOf,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(reifyTarget,[Default]), UsedName(addCommand,[Default]), UsedName(override_reset,[Default]), UsedName(finalize,[Default]), UsedName(Hello;init;,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(io,[Default]), UsedName(namePorts,[Default]), UsedName(mkReset,[Default]), UsedName(_computeName,[Default]), UsedName(desiredName,[Default]), UsedName(toTarget,[Default]), UsedName(reset,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getChiselPorts,[Default]), UsedName(pathName,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(_onModuleClose,[Default]), UsedName(clock,[Default]), UsedName(setRef,[Default]), UsedName(led,[Default]), UsedName($init$,[Default]), UsedName(suggestName,[Default]), UsedName(getCommands,[Default]), UsedName(getPorts,[Default]), UsedName(getClass,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(_id,[Default]), UsedName(_component,[Default]), UsedName(override_clock,[Default]), UsedName(_closed,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(reifyParent,[Default]), UsedName(_lastId,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(synchronized,[Default]), UsedName(_circuit,[Default]), UsedName(instanceName,[Default]), UsedName(getModulePorts,[Default]), UsedName(getRef,[Default]), UsedName(compileOptions,[Default]), UsedName(main,[Default]), UsedName(executionStart,[Default]), UsedName(forceFinalName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(Hello)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from FIR...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: FIR[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(FIR)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(FIR,ModifiedNames(changes = UsedName(parentPathName,[Default]), UsedName(forceName,[Default]), UsedName(circuitName,[Default]), UsedName(seedOpt,[Default]), UsedName(isClosed,[Default]), UsedName(parentModName,[Default]), UsedName(initializeInParent,[Default]), UsedName(override_clock_=,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(findPort,[Default]), UsedName(x2,[Default]), UsedName(FIR;init;,[Default]), UsedName(_namespace,[Default]), UsedName(data,[Default]), UsedName(override_reset_=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getPublicFields,[Default]), UsedName(addId,[Default]), UsedName(out,[Default]), UsedName(generateComponent,[Default]), UsedName(nameIds,[Default]), UsedName(name,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(portsContains,[Default]), UsedName(equals,[Default]), UsedName(args,[Default]), UsedName(IO,[Default]), UsedName(_parent,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(toNamed,[Default]), UsedName(ne,[Default]), UsedName(eq,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(getTarget,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(delayedInit,[Default]), UsedName(isInstanceOf,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(reifyTarget,[Default]), UsedName(addCommand,[Default]), UsedName(override_reset,[Default]), UsedName(finalize,[Default]), UsedName(x0,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(io,[Default]), UsedName(namePorts,[Default]), UsedName(mkReset,[Default]), UsedName(x1,[Default]), UsedName(_computeName,[Default]), UsedName(desiredName,[Default]), UsedName(toTarget,[Default]), UsedName(reset,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getChiselPorts,[Default]), UsedName(pathName,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(_onModuleClose,[Default]), UsedName(clock,[Default]), UsedName(setRef,[Default]), UsedName($init$,[Default]), UsedName(suggestName,[Default]), UsedName(getCommands,[Default]), UsedName(getPorts,[Default]), UsedName(getClass,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(_id,[Default]), UsedName(_component,[Default]), UsedName(override_clock,[Default]), UsedName(_closed,[Default]), UsedName(FIR,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(reifyParent,[Default]), UsedName(_lastId,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(synchronized,[Default]), UsedName(_circuit,[Default]), UsedName(instanceName,[Default]), UsedName(getModulePorts,[Default]), UsedName(getRef,[Default]), UsedName(compileOptions,[Default]), UsedName(main,[Default]), UsedName(executionStart,[Default]), UsedName(forceFinalName,[Default]))) invalidates 1 classes due to The FIR has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(parentPathName,[Default]), UsedName(forceName,[Default]), UsedName(circuitName,[Default]), UsedName(seedOpt,[Default]), UsedName(isClosed,[Default]), UsedName(parentModName,[Default]), UsedName(initializeInParent,[Default]), UsedName(override_clock_=,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(findPort,[Default]), UsedName(x2,[Default]), UsedName(FIR;init;,[Default]), UsedName(_namespace,[Default]), UsedName(data,[Default]), UsedName(override_reset_=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(getPublicFields,[Default]), UsedName(addId,[Default]), UsedName(out,[Default]), UsedName(generateComponent,[Default]), UsedName(nameIds,[Default]), UsedName(name,[Default]), UsedName(autoSeed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(portsContains,[Default]), UsedName(equals,[Default]), UsedName(args,[Default]), UsedName(IO,[Default]), UsedName(_parent,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(toNamed,[Default]), UsedName(ne,[Default]), UsedName(eq,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(getTarget,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(delayedInit,[Default]), UsedName(isInstanceOf,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(reifyTarget,[Default]), UsedName(addCommand,[Default]), UsedName(override_reset,[Default]), UsedName(finalize,[Default]), UsedName(x0,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(io,[Default]), UsedName(namePorts,[Default]), UsedName(mkReset,[Default]), UsedName(x1,[Default]), UsedName(_computeName,[Default]), UsedName(desiredName,[Default]), UsedName(toTarget,[Default]), UsedName(reset,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getChiselPorts,[Default]), UsedName(pathName,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(_onModuleClose,[Default]), UsedName(clock,[Default]), UsedName(setRef,[Default]), UsedName($init$,[Default]), UsedName(suggestName,[Default]), UsedName(getCommands,[Default]), UsedName(getPorts,[Default]), UsedName(getClass,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(_id,[Default]), UsedName(_component,[Default]), UsedName(override_clock,[Default]), UsedName(_closed,[Default]), UsedName(FIR,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(reifyParent,[Default]), UsedName(_lastId,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(synchronized,[Default]), UsedName(_circuit,[Default]), UsedName(instanceName,[Default]), UsedName(getModulePorts,[Default]), UsedName(getRef,[Default]), UsedName(compileOptions,[Default]), UsedName(main,[Default]), UsedName(executionStart,[Default]), UsedName(forceFinalName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(FIR)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Hello, FIR[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated macros due to upstream dependencies change: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
